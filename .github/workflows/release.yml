name: Release MCP Keycloak to PyPI

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  validate-release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      tag-version: ${{ steps.get-version.outputs.tag-version }}
    steps:
    - name: ⚙️ Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: ⚙️ Checkout the project
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for UV build

    - name: ⚙️ Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: ⚙️ Set up Python
      run: uv python install 3.12

    - name: 🏷️ Get version from release tag
      id: get-version
      run: |
        TAG_VERSION="${{ github.ref_name }}"
        VERSION=${TAG_VERSION#v}  # Remove 'v' prefix if present
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "tag-version=${TAG_VERSION}" >> $GITHUB_OUTPUT

  security-scan:
    runs-on: ubuntu-latest
    needs: validate-release
    steps:
    - name: ⚙️ Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: ⚙️ Checkout the project
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: ⚙️ Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: ⚙️ Set Python up and add dependencies
      run: |
        uv python install 3.12
        uv sync --all-extras --dev
        uv add --dev bandit

    - name: ⚙️ Run security scan with bandit
      run: |
        uv run bandit -r src/

  test:
    runs-on: ubuntu-latest
    needs: validate-release
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]

    services:
      keycloak:
        image: quay.io/keycloak/keycloak:latest
        ports:
          - 8080:8080
        env:
          KEYCLOAK_ADMIN: admin
          KEYCLOAK_ADMIN_PASSWORD: admin
        options: >-
          --health-cmd "curl -f http://localhost:8080/health/ready || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

    steps:
    - name: ⚙️ Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: ⚙️ Checkout the project
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: ⚙️ Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: ⚙️ Set up Python ${{ matrix.python-version }}
      run: |
        uv python install ${{ matrix.python-version }}
        uv sync --all-extras --dev

    - name: ⚙️ Run tests
      run: uv run pytest tests/ -v --tb=short
      env:
        KEYCLOAK_URL: http://localhost:8080
        KEYCLOAK_REALM: master
        KEYCLOAK_USERNAME: admin
        KEYCLOAK_PASSWORD: admin

    - name: ⚙️ Test MCP server startup
      run: |
        timeout 10s uv run python src/main.py || test $? = 124
      env:
        KEYCLOAK_URL: http://localhost:8080
        KEYCLOAK_REALM: master
        KEYCLOAK_USERNAME: admin
        KEYCLOAK_PASSWORD: admin

  build-and-publish:
    runs-on: ubuntu-latest
    needs: [validate-release, security-scan, test]
    environment: 
      name: pypi
      url: https://pypi.org/p/mcp-keycloak
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
      contents: read
      attestations: write  # For build attestations

    steps:
    - name: ⚙️ Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: ⚙️ Checkout the project
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for UV build

    - name: ⚙️ Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: ⚙️ Set up Python
      run: uv python install 3.12

    - name: ⚙️ Build package
      run: |
        uv build --sdist --wheel

    - name: ⚙️ Check package
      run: |
        uv add --dev twine
        uv run twine check dist/*

    - name: ⚙️ Generate build attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-path: 'dist/*'

    - name: ⚙️ Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true
        attestations: true

    - name: ⚙️ Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ needs.validate-release.outputs.version }}
        path: dist/
        retention-days: 90

  notify-success:
    runs-on: ubuntu-latest
    needs: [validate-release, build-and-publish]
    if: success()
    steps:
    - name: ⚙️ Success notification
      run: |
        echo "🎉 Successfully released MCP Keycloak v${{ needs.validate-release.outputs.version }} to PyPI!"
        echo "📦 Package: https://pypi.org/project/mcp-keycloak/${{ needs.validate-release.outputs.version }}/"
        echo "🏷️ Release: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}"