name: CI

on:
  push:
    branches:
    - 'master'
  pull_request:
    branches:
      - 'master'

permissions:
  contents: read

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
    - name: ⚙️ Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: ⚙️ Checkout the project
      uses: actions/checkout@v4

    - name: ⚙️ Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: ⚙️ Set up Python
      run: |
        uv python install 3.12
        uv sync --all-extras --dev

    - name: ⚙️ Run ruff format check
      run: |
        uv run ruff format --check .

    - name: ⚙️ Run ruff linter
      run: |
        uv run ruff check .

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: ⚙️ Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: ⚙️ Checkout the project
      uses: actions/checkout@v4

    - name: ⚙️ Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: ⚙️ Set up Python
      run: |
        uv python install 3.12
        uv sync --all-extras --dev

    - name: ⚙️ Add security tools
      run: |
        uv add --dev bandit safety

    - name: ⚙️ Run bandit security scan
      run: |
        uv run bandit -r src/ -f json -o bandit-report.json || true
        uv run bandit -r src/

    - name: ⚙️ Run safety check
      run: |
        uv run safety check --json || true

    - name: ⚙️ Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
        retention-days: 7

  test-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    services:
      keycloak:
        image: quay.io/keycloak/keycloak:latest
        ports:
          - 8080:8080
        env:
          KEYCLOAK_ADMIN: admin
          KEYCLOAK_ADMIN_PASSWORD: admin
          KC_BOOTSTRAP_ADMIN_USERNAME: admin
          KC_BOOTSTRAP_ADMIN_PASSWORD: admin
        options: >-
          --health-cmd "curl -f http://localhost:8080/health/ready || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        cmd: start-dev

    steps:
    - name: ⚙️ Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: ⚙️ Checkout the project
      uses: actions/checkout@v4

    - name: ⚙️ Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: ⚙️ Set Python ${{ matrix.python-version }} up and add dependencies
      run: |
        uv python install ${{ matrix.python-version }}
        uv sync --all-extras --dev
        uv add --dev pytest pytest-cov pytest-asyncio coverage

    - name: ⚙️ Run tests with coverage
      run: |
        uv run pytest tests/ -v --cov=src --cov-report=xml --cov-report=html --cov-report=term
      env:
        KEYCLOAK_URL: http://localhost:8080
        KEYCLOAK_REALM: master
        KEYCLOAK_CLIENT_ID: admin-cli
        KEYCLOAK_USERNAME: admin
        KEYCLOAK_PASSWORD: admin

    - name: ⚙️ Test MCP server startup
      run: |
        timeout 10s uv run python src/main.py || test $? = 124
      env:
        KEYCLOAK_URL: http://localhost:8080
        KEYCLOAK_REALM: master
        KEYCLOAK_CLIENT_ID: admin-cli
        KEYCLOAK_USERNAME: admin
        KEYCLOAK_PASSWORD: admin

    - name: ⚙️ Upload coverage reports
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.12'
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  test-other-os:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
    - name: ⚙️ Checkout the project
      uses: actions/checkout@v4

    - name: ⚙️ Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: ⚙️ Set Python ${{ matrix.python-version }} up and add dependencies
      run: |
        uv python install ${{ matrix.python-version }}
        uv sync --all-extras --dev
        uv add --dev pytest pytest-cov pytest-asyncio coverage

    - name: ⚙️ Run tests (without Keycloak services)
      run: |
        uv run pytest tests/ -v
      env:
        KEYCLOAK_URL: http://localhost:8080
        KEYCLOAK_REALM: master
        KEYCLOAK_CLIENT_ID: admin-cli
        KEYCLOAK_USERNAME: admin
        KEYCLOAK_PASSWORD: admin

    - name: ⚙️ Test MCP server startup (macOS)
      run: |
        brew install coreutils
        gtimeout 10s uv run python src/main.py || test $? = 124
      env:
        KEYCLOAK_URL: http://localhost:8080
        KEYCLOAK_REALM: master
        KEYCLOAK_CLIENT_ID: admin-cli
        KEYCLOAK_USERNAME: admin
        KEYCLOAK_PASSWORD: admin
      if: matrix.os == 'macos-latest'

    - name: ⚙️ Test MCP server startup (Windows)
      run: |
        Start-Process -FilePath "uv" -ArgumentList "run", "python", "src/main.py" -PassThru | Wait-Process -Timeout 10 -ErrorAction SilentlyContinue
      env:
        KEYCLOAK_URL: http://localhost:8080
        KEYCLOAK_REALM: master
        KEYCLOAK_CLIENT_ID: admin-cli
        KEYCLOAK_USERNAME: admin
        KEYCLOAK_PASSWORD: admin
      if: matrix.os == 'windows-latest'

  build-test:
    runs-on: ubuntu-latest
    needs: [lint-and-format, security-scan, test-ubuntu, test-other-os]
    steps:
    - name: ⚙️ Harden Runner
      uses: step-security/harden-runner@v2
      with:
        egress-policy: audit

    - name: ⚙️ Checkout the project
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for UV build

    - name: ⚙️ Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: ⚙️ Set up Python
      run: uv python install 3.12

    - name: ⚙️ Build package
      run: |
        uv build --sdist --wheel

    - name: ⚙️ Check package
      run: |
        uv add --dev twine
        uv run twine check dist/*

    - name: ⚙️ Test package installation
      run: |
        uv venv test-env
        source test-env/bin/activate
        pip install dist/*.whl
        mcp-keycloak --help

    - name: ⚙️ Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/
        retention-days: 7

